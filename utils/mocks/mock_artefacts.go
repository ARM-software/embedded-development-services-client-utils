/*
 * Copyright (C) 2020-2024 Arm Limited or its affiliates and Contributors. All rights reserved.
 * SPDX-License-Identifier: Apache-2.0
 */

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ARM-software/embedded-development-services-client-utils/utils/artefacts (interfaces: IArtefactManager)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	client "github.com/ARM-software/embedded-development-services-client/client"
	gomock "github.com/golang/mock/gomock"
)

// MockIArtefactManager is a mock of IArtefactManager interface.
type MockIArtefactManager struct {
	ctrl     *gomock.Controller
	recorder *MockIArtefactManagerMockRecorder
}

// MockIArtefactManagerMockRecorder is the mock recorder for MockIArtefactManager.
type MockIArtefactManagerMockRecorder struct {
	mock *MockIArtefactManager
}

// NewMockIArtefactManager creates a new mock instance.
func NewMockIArtefactManager(ctrl *gomock.Controller) *MockIArtefactManager {
	mock := &MockIArtefactManager{ctrl: ctrl}
	mock.recorder = &MockIArtefactManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIArtefactManager) EXPECT() *MockIArtefactManagerMockRecorder {
	return m.recorder
}

// DownloadJobArtefact mocks base method.
func (m *MockIArtefactManager) DownloadJobArtefact(arg0 context.Context, arg1, arg2 string, arg3 client.HalLinkData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DownloadJobArtefact", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// DownloadJobArtefact indicates an expected call of DownloadJobArtefact.
func (mr *MockIArtefactManagerMockRecorder) DownloadJobArtefact(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadJobArtefact", reflect.TypeOf((*MockIArtefactManager)(nil).DownloadJobArtefact), arg0, arg1, arg2, arg3)
}
